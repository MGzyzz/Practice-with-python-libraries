import matplotlib.pyplot as plt
import numpy as np

# [1]=========================[1]
x = np.linspace(0, 10, 100)
y = np.sin(x)

plt.plot(x, y)
plt.xlabel('x')
plt.ylabel('y')
plt.title('График sin(x)')
plt.show()
# [1]=========================[1]

# [2]=========================[2]
# x = np.random.rand(100)
# y = np.random.rand(100)
#
# plt.scatter(x, y)
# plt.xlabel('x')
# plt.ylabel('y')
# plt.title('Диаграмма рассеяния')
# plt.show()
# [2]=========================[2]

# [3]=========================[3]
# x = np.random.randn(1000)
#
# plt.hist(x, bins=30)
# plt.xlabel('Значения')
# plt.ylabel('Частота')
# plt.title('Гистограмма')
# plt.show()
# [3]=========================[3]

# [4]=========================[4]
# labels = ['Яблоки', 'Апельсины', 'Бананы', 'Груши']
# sizes = [15, 30, 45, 10]
#
# plt.pie(sizes, labels=labels, autopct='%1.1f%%')
# plt.title('Круговая диаграмма')
# plt.show()
# [4]=========================[4]

# [5]=========================[5]
# x = np.linspace(0, 10, 100)
# y1 = np.sin(x)
# y2 = np.cos(x)
#
# fig, axes = plt.subplots(nrows=2, ncols=1)
#
# axes[0].plot(x, y1)
# axes[0].set_title('sin(x)')
#
# axes[1].plot(x, y2)
# axes[1].set_title('cos(x)')
#
# plt.tight_layout()
# plt.show()
# [5]=========================[5]


# Matplotlib - отличная библиотека с общирным список команд. Которые позволяет рисовать разные графики и диограммы.
# Хорошо подходит для работы с фере научных исследований, финансов, анализа данных и машинного обучения.
# Определение кода сверху
# Примечание: коды были закомментированый для того чтобы работал один из кодов.
# Все коды были разделены с помощью знака =
# [1] Линейный график
# [2] Диаграмма рассеяния
# [3] Гистограмма
# [4] Круговая диаграмма
# [5] График с несколькими подграфиками