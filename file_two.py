import re


def check_numbers(check):
    if re.match(r'^[a-zA-Z]+$', check):
        return check
    else:
        return print("Действие невозможно так как введенный вами имя содержит цифры или другой символ. Пожалуйста напишите повторно")


def check_words(check):
    if re.match(r'^[\d+-]+$', check):
        return check
    else:
        return print(
            "Действие невозможно так как введенный вами номер содержит букву или другой символ. Пожалуйста напишите повторно")


check_numbers("Hello World1!")
check_numbers("Hello World!")
check_words("2141234a12341")
check_words("214123412341!")

text = "Привет, мир! Это пример текста с номерами телефона: +7-123-456-78-90, +7 (000) 000-00-00."
phone_pattern = r'\+7[\s\-\(]*(\d{3})[\s\-\)]*(\d{3})[\s\-]*(\d{2})[\s\-]*(\d{2})'
phone_numbers = re.findall(phone_pattern, text)
print("Найденные номера телефонов:", phone_numbers)

masked_text = re.sub(phone_pattern, r'+7-XXX-XXX-XX-\4', text)
print("Текст с маскированными номерами телефонов:", masked_text)

word_pattern = r'\w+'
words = re.findall(word_pattern, text)
print("Список слов:", words)


# Библиотека re - мне запомнилась тем что она облегчила написание кода для проверки цифр или букв в строке. Я не раз
# использовал эту библиотеку в домашних заданиях. Так же вот пару примеров использование данной библиотеки.
# Обьяснение действий кода написаный сверху
# [1] Проверка на наличие цифры и символы
# [2] Проверка на наличие букв и цифр
# [3] Поиск всех телефонных номеров в строке
# [4] Замена телефонных номеров на маскированные
# [5] Разбиение строки на слова